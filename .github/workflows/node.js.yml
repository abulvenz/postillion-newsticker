# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "0 9 * * 1,3,5"
jobs:
  build:
    runs-on: ubuntu-latest



    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Install Puppeteer dependencies
        run: sudo apt-get install -y libnss3 libatk1.0-0 libcups2 libdbus-1-3 libxcomposite1 libxdamage1 libxrandr2 libgbm1 libasound2 libpangocairo-1.0-0

      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - run: git config --global user.email "actions@github.com"
      - run: git config --global user.name "Build bot"
      - run: npm ci
      - run: |
          node index.mjs --no-sandbox
          rm -rf ./docs/
          parcel build --dist-dir=docs --public-url=https://abulvenz.github.io/postillion-newsticker/ index.html
          cp tickers.json docs/

      - name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: gh-pages
          build_dir: docs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: gh-page
      #     path: |
      #       ./alreadyFetched.json
      #       ./tickers.js

      # - uses: actions/download-artifact@v3
      #   id: download
      #   with:
      #     name: gh-page
      #     path: |
      #       ./alreadyFetched.json
      #       ./tickers.js

      #- name: 'Echo download path'
      #  run: echo ${{steps.download.outputs.download-path}}

      - name: Commit report
        run: |
          git config --global user.name 'Gitbot'
          git config --global user.email 'abulvenz@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git checkout "${GITHUB_REF:11}"
          git add -A
          git commit -am "Automated report"
          git push
